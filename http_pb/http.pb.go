// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.0--rc2
// source: http.proto

package http_pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HttpMethod int32

const (
	HttpMethod_GET     HttpMethod = 0
	HttpMethod_POST    HttpMethod = 1
	HttpMethod_PUT     HttpMethod = 2
	HttpMethod_DELETE  HttpMethod = 3
	HttpMethod_PATCH   HttpMethod = 4
	HttpMethod_HEAD    HttpMethod = 5
	HttpMethod_OPTIONS HttpMethod = 6
)

// Enum value maps for HttpMethod.
var (
	HttpMethod_name = map[int32]string{
		0: "GET",
		1: "POST",
		2: "PUT",
		3: "DELETE",
		4: "PATCH",
		5: "HEAD",
		6: "OPTIONS",
	}
	HttpMethod_value = map[string]int32{
		"GET":     0,
		"POST":    1,
		"PUT":     2,
		"DELETE":  3,
		"PATCH":   4,
		"HEAD":    5,
		"OPTIONS": 6,
	}
)

func (x HttpMethod) Enum() *HttpMethod {
	p := new(HttpMethod)
	*p = x
	return p
}

func (x HttpMethod) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HttpMethod) Descriptor() protoreflect.EnumDescriptor {
	return file_http_proto_enumTypes[0].Descriptor()
}

func (HttpMethod) Type() protoreflect.EnumType {
	return &file_http_proto_enumTypes[0]
}

func (x HttpMethod) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *HttpMethod) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = HttpMethod(num)
	return nil
}

// Deprecated: Use HttpMethod.Descriptor instead.
func (HttpMethod) EnumDescriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{0}
}

type HttpStatus int32

const (
	HttpStatus_CONTINUE                   HttpStatus = 100
	HttpStatus_SWITCHING_PROTOCOLS        HttpStatus = 101
	HttpStatus_OK                         HttpStatus = 200
	HttpStatus_CREATED                    HttpStatus = 201
	HttpStatus_ACCEPTED                   HttpStatus = 202
	HttpStatus_NO_CONTENT                 HttpStatus = 204
	HttpStatus_MOVED_PERMANENTLY          HttpStatus = 301
	HttpStatus_FOUND                      HttpStatus = 302
	HttpStatus_NOT_MODIFIED               HttpStatus = 304
	HttpStatus_BAD_REQUEST                HttpStatus = 400
	HttpStatus_UNAUTHORIZED               HttpStatus = 401
	HttpStatus_PAYMENT_REQUIRED           HttpStatus = 402
	HttpStatus_FORBIDDEN                  HttpStatus = 403
	HttpStatus_NOT_FOUND                  HttpStatus = 404
	HttpStatus_METHOD_NOT_ALLOWED         HttpStatus = 405
	HttpStatus_NOT_ACCEPTABLE             HttpStatus = 406
	HttpStatus_REQUEST_TIMEOUT            HttpStatus = 408
	HttpStatus_CONFLICT                   HttpStatus = 409
	HttpStatus_GONE                       HttpStatus = 410
	HttpStatus_PAYLOAD_TOO_LARGE          HttpStatus = 413
	HttpStatus_URI_TOO_LONG               HttpStatus = 414
	HttpStatus_UNSUPPORTED_MEDIA_TYPE     HttpStatus = 415
	HttpStatus_TOO_MANY_REQUESTS          HttpStatus = 429
	HttpStatus_INTERNAL_SERVER_ERROR      HttpStatus = 500
	HttpStatus_NOT_IMPLEMENTED            HttpStatus = 501
	HttpStatus_BAD_GATEWAY                HttpStatus = 502
	HttpStatus_SERVICE_UNAVAILABLE        HttpStatus = 503
	HttpStatus_GATEWAY_TIMEOUT            HttpStatus = 504
	HttpStatus_HTTP_VERSION_NOT_SUPPORTED HttpStatus = 505
)

// Enum value maps for HttpStatus.
var (
	HttpStatus_name = map[int32]string{
		100: "CONTINUE",
		101: "SWITCHING_PROTOCOLS",
		200: "OK",
		201: "CREATED",
		202: "ACCEPTED",
		204: "NO_CONTENT",
		301: "MOVED_PERMANENTLY",
		302: "FOUND",
		304: "NOT_MODIFIED",
		400: "BAD_REQUEST",
		401: "UNAUTHORIZED",
		402: "PAYMENT_REQUIRED",
		403: "FORBIDDEN",
		404: "NOT_FOUND",
		405: "METHOD_NOT_ALLOWED",
		406: "NOT_ACCEPTABLE",
		408: "REQUEST_TIMEOUT",
		409: "CONFLICT",
		410: "GONE",
		413: "PAYLOAD_TOO_LARGE",
		414: "URI_TOO_LONG",
		415: "UNSUPPORTED_MEDIA_TYPE",
		429: "TOO_MANY_REQUESTS",
		500: "INTERNAL_SERVER_ERROR",
		501: "NOT_IMPLEMENTED",
		502: "BAD_GATEWAY",
		503: "SERVICE_UNAVAILABLE",
		504: "GATEWAY_TIMEOUT",
		505: "HTTP_VERSION_NOT_SUPPORTED",
	}
	HttpStatus_value = map[string]int32{
		"CONTINUE":                   100,
		"SWITCHING_PROTOCOLS":        101,
		"OK":                         200,
		"CREATED":                    201,
		"ACCEPTED":                   202,
		"NO_CONTENT":                 204,
		"MOVED_PERMANENTLY":          301,
		"FOUND":                      302,
		"NOT_MODIFIED":               304,
		"BAD_REQUEST":                400,
		"UNAUTHORIZED":               401,
		"PAYMENT_REQUIRED":           402,
		"FORBIDDEN":                  403,
		"NOT_FOUND":                  404,
		"METHOD_NOT_ALLOWED":         405,
		"NOT_ACCEPTABLE":             406,
		"REQUEST_TIMEOUT":            408,
		"CONFLICT":                   409,
		"GONE":                       410,
		"PAYLOAD_TOO_LARGE":          413,
		"URI_TOO_LONG":               414,
		"UNSUPPORTED_MEDIA_TYPE":     415,
		"TOO_MANY_REQUESTS":          429,
		"INTERNAL_SERVER_ERROR":      500,
		"NOT_IMPLEMENTED":            501,
		"BAD_GATEWAY":                502,
		"SERVICE_UNAVAILABLE":        503,
		"GATEWAY_TIMEOUT":            504,
		"HTTP_VERSION_NOT_SUPPORTED": 505,
	}
)

func (x HttpStatus) Enum() *HttpStatus {
	p := new(HttpStatus)
	*p = x
	return p
}

func (x HttpStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HttpStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_http_proto_enumTypes[1].Descriptor()
}

func (HttpStatus) Type() protoreflect.EnumType {
	return &file_http_proto_enumTypes[1]
}

func (x HttpStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *HttpStatus) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = HttpStatus(num)
	return nil
}

// Deprecated: Use HttpStatus.Descriptor instead.
func (HttpStatus) EnumDescriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{1}
}

type Envelope_HttpProtoEncoding int32

const (
	Envelope_UNCOMPRESSED Envelope_HttpProtoEncoding = 0
	Envelope_COMPRESSED   Envelope_HttpProtoEncoding = 1
)

// Enum value maps for Envelope_HttpProtoEncoding.
var (
	Envelope_HttpProtoEncoding_name = map[int32]string{
		0: "UNCOMPRESSED",
		1: "COMPRESSED",
	}
	Envelope_HttpProtoEncoding_value = map[string]int32{
		"UNCOMPRESSED": 0,
		"COMPRESSED":   1,
	}
)

func (x Envelope_HttpProtoEncoding) Enum() *Envelope_HttpProtoEncoding {
	p := new(Envelope_HttpProtoEncoding)
	*p = x
	return p
}

func (x Envelope_HttpProtoEncoding) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Envelope_HttpProtoEncoding) Descriptor() protoreflect.EnumDescriptor {
	return file_http_proto_enumTypes[2].Descriptor()
}

func (Envelope_HttpProtoEncoding) Type() protoreflect.EnumType {
	return &file_http_proto_enumTypes[2]
}

func (x Envelope_HttpProtoEncoding) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Envelope_HttpProtoEncoding) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Envelope_HttpProtoEncoding(num)
	return nil
}

// Deprecated: Use Envelope_HttpProtoEncoding.Descriptor instead.
func (Envelope_HttpProtoEncoding) EnumDescriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{4, 0}
}

type Header struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           *string                `protobuf:"bytes,1,req,name=key" json:"key,omitempty"`
	Value         *string                `protobuf:"bytes,2,req,name=value" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Header) Reset() {
	*x = Header{}
	mi := &file_http_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Header) ProtoMessage() {}

func (x *Header) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Header.ProtoReflect.Descriptor instead.
func (*Header) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{0}
}

func (x *Header) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *Header) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type Body struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       []byte                 `protobuf:"bytes,1,req,name=content" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Body) Reset() {
	*x = Body{}
	mi := &file_http_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Body) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Body) ProtoMessage() {}

func (x *Body) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Body.ProtoReflect.Descriptor instead.
func (*Body) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{1}
}

func (x *Body) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type HttpRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Method        *HttpMethod            `protobuf:"varint,1,req,name=method,enum=http.proto.HttpMethod" json:"method,omitempty"`
	Path          *string                `protobuf:"bytes,2,req,name=path" json:"path,omitempty"`
	Headers       []*Header              `protobuf:"bytes,3,rep,name=headers" json:"headers,omitempty"`
	Body          *Body                  `protobuf:"bytes,4,opt,name=body" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HttpRequest) Reset() {
	*x = HttpRequest{}
	mi := &file_http_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpRequest) ProtoMessage() {}

func (x *HttpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpRequest.ProtoReflect.Descriptor instead.
func (*HttpRequest) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{2}
}

func (x *HttpRequest) GetMethod() HttpMethod {
	if x != nil && x.Method != nil {
		return *x.Method
	}
	return HttpMethod_GET
}

func (x *HttpRequest) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

func (x *HttpRequest) GetHeaders() []*Header {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HttpRequest) GetBody() *Body {
	if x != nil {
		return x.Body
	}
	return nil
}

type HttpResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        *HttpStatus            `protobuf:"varint,1,req,name=status,enum=http.proto.HttpStatus" json:"status,omitempty"`
	Headers       []*Header              `protobuf:"bytes,2,rep,name=headers" json:"headers,omitempty"`
	Body          *Body                  `protobuf:"bytes,3,opt,name=body" json:"body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HttpResponse) Reset() {
	*x = HttpResponse{}
	mi := &file_http_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpResponse) ProtoMessage() {}

func (x *HttpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpResponse.ProtoReflect.Descriptor instead.
func (*HttpResponse) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{3}
}

func (x *HttpResponse) GetStatus() HttpStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return HttpStatus_CONTINUE
}

func (x *HttpResponse) GetHeaders() []*Header {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *HttpResponse) GetBody() *Body {
	if x != nil {
		return x.Body
	}
	return nil
}

type Envelope struct {
	state          protoimpl.MessageState      `protogen:"open.v1"`
	Encoding       *Envelope_HttpProtoEncoding `protobuf:"varint,1,req,name=encoding,enum=http.proto.Envelope_HttpProtoEncoding" json:"encoding,omitempty"`
	Request        *HttpRequest                `protobuf:"bytes,2,opt,name=request" json:"request,omitempty"`
	Response       *HttpResponse               `protobuf:"bytes,3,opt,name=response" json:"response,omitempty"`
	CompressedData []byte                      `protobuf:"bytes,4,opt,name=compressed_data,json=compressedData" json:"compressed_data,omitempty"` // either compressed request or response
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Envelope) Reset() {
	*x = Envelope{}
	mi := &file_http_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Envelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Envelope) ProtoMessage() {}

func (x *Envelope) ProtoReflect() protoreflect.Message {
	mi := &file_http_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Envelope.ProtoReflect.Descriptor instead.
func (*Envelope) Descriptor() ([]byte, []int) {
	return file_http_proto_rawDescGZIP(), []int{4}
}

func (x *Envelope) GetEncoding() Envelope_HttpProtoEncoding {
	if x != nil && x.Encoding != nil {
		return *x.Encoding
	}
	return Envelope_UNCOMPRESSED
}

func (x *Envelope) GetRequest() *HttpRequest {
	if x != nil {
		return x.Request
	}
	return nil
}

func (x *Envelope) GetResponse() *HttpResponse {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *Envelope) GetCompressedData() []byte {
	if x != nil {
		return x.CompressedData
	}
	return nil
}

var File_http_proto protoreflect.FileDescriptor

const file_http_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"http.proto\x12\n" +
	"http.proto\"0\n" +
	"\x06Header\x12\x10\n" +
	"\x03key\x18\x01 \x02(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x02(\tR\x05value\" \n" +
	"\x04Body\x12\x18\n" +
	"\acontent\x18\x01 \x02(\fR\acontent\"\xa5\x01\n" +
	"\vHttpRequest\x12.\n" +
	"\x06method\x18\x01 \x02(\x0e2\x16.http.proto.HttpMethodR\x06method\x12\x12\n" +
	"\x04path\x18\x02 \x02(\tR\x04path\x12,\n" +
	"\aheaders\x18\x03 \x03(\v2\x12.http.proto.HeaderR\aheaders\x12$\n" +
	"\x04body\x18\x04 \x01(\v2\x10.http.proto.BodyR\x04body\"\x92\x01\n" +
	"\fHttpResponse\x12.\n" +
	"\x06status\x18\x01 \x02(\x0e2\x16.http.proto.HttpStatusR\x06status\x12,\n" +
	"\aheaders\x18\x02 \x03(\v2\x12.http.proto.HeaderR\aheaders\x12$\n" +
	"\x04body\x18\x03 \x01(\v2\x10.http.proto.BodyR\x04body\"\x97\x02\n" +
	"\bEnvelope\x12B\n" +
	"\bencoding\x18\x01 \x02(\x0e2&.http.proto.Envelope.HttpProtoEncodingR\bencoding\x121\n" +
	"\arequest\x18\x02 \x01(\v2\x17.http.proto.HttpRequestR\arequest\x124\n" +
	"\bresponse\x18\x03 \x01(\v2\x18.http.proto.HttpResponseR\bresponse\x12'\n" +
	"\x0fcompressed_data\x18\x04 \x01(\fR\x0ecompressedData\"5\n" +
	"\x11HttpProtoEncoding\x12\x10\n" +
	"\fUNCOMPRESSED\x10\x00\x12\x0e\n" +
	"\n" +
	"COMPRESSED\x10\x01*V\n" +
	"\n" +
	"HttpMethod\x12\a\n" +
	"\x03GET\x10\x00\x12\b\n" +
	"\x04POST\x10\x01\x12\a\n" +
	"\x03PUT\x10\x02\x12\n" +
	"\n" +
	"\x06DELETE\x10\x03\x12\t\n" +
	"\x05PATCH\x10\x04\x12\b\n" +
	"\x04HEAD\x10\x05\x12\v\n" +
	"\aOPTIONS\x10\x06*\xd0\x04\n" +
	"\n" +
	"HttpStatus\x12\f\n" +
	"\bCONTINUE\x10d\x12\x17\n" +
	"\x13SWITCHING_PROTOCOLS\x10e\x12\a\n" +
	"\x02OK\x10\xc8\x01\x12\f\n" +
	"\aCREATED\x10\xc9\x01\x12\r\n" +
	"\bACCEPTED\x10\xca\x01\x12\x0f\n" +
	"\n" +
	"NO_CONTENT\x10\xcc\x01\x12\x16\n" +
	"\x11MOVED_PERMANENTLY\x10\xad\x02\x12\n" +
	"\n" +
	"\x05FOUND\x10\xae\x02\x12\x11\n" +
	"\fNOT_MODIFIED\x10\xb0\x02\x12\x10\n" +
	"\vBAD_REQUEST\x10\x90\x03\x12\x11\n" +
	"\fUNAUTHORIZED\x10\x91\x03\x12\x15\n" +
	"\x10PAYMENT_REQUIRED\x10\x92\x03\x12\x0e\n" +
	"\tFORBIDDEN\x10\x93\x03\x12\x0e\n" +
	"\tNOT_FOUND\x10\x94\x03\x12\x17\n" +
	"\x12METHOD_NOT_ALLOWED\x10\x95\x03\x12\x13\n" +
	"\x0eNOT_ACCEPTABLE\x10\x96\x03\x12\x14\n" +
	"\x0fREQUEST_TIMEOUT\x10\x98\x03\x12\r\n" +
	"\bCONFLICT\x10\x99\x03\x12\t\n" +
	"\x04GONE\x10\x9a\x03\x12\x16\n" +
	"\x11PAYLOAD_TOO_LARGE\x10\x9d\x03\x12\x11\n" +
	"\fURI_TOO_LONG\x10\x9e\x03\x12\x1b\n" +
	"\x16UNSUPPORTED_MEDIA_TYPE\x10\x9f\x03\x12\x16\n" +
	"\x11TOO_MANY_REQUESTS\x10\xad\x03\x12\x1a\n" +
	"\x15INTERNAL_SERVER_ERROR\x10\xf4\x03\x12\x14\n" +
	"\x0fNOT_IMPLEMENTED\x10\xf5\x03\x12\x10\n" +
	"\vBAD_GATEWAY\x10\xf6\x03\x12\x18\n" +
	"\x13SERVICE_UNAVAILABLE\x10\xf7\x03\x12\x14\n" +
	"\x0fGATEWAY_TIMEOUT\x10\xf8\x03\x12\x1f\n" +
	"\x1aHTTP_VERSION_NOT_SUPPORTED\x10\xf9\x03B\vZ\t./http_pb"

var (
	file_http_proto_rawDescOnce sync.Once
	file_http_proto_rawDescData []byte
)

func file_http_proto_rawDescGZIP() []byte {
	file_http_proto_rawDescOnce.Do(func() {
		file_http_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_http_proto_rawDesc), len(file_http_proto_rawDesc)))
	})
	return file_http_proto_rawDescData
}

var file_http_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_http_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_http_proto_goTypes = []any{
	(HttpMethod)(0),                 // 0: http.proto.HttpMethod
	(HttpStatus)(0),                 // 1: http.proto.HttpStatus
	(Envelope_HttpProtoEncoding)(0), // 2: http.proto.Envelope.HttpProtoEncoding
	(*Header)(nil),                  // 3: http.proto.Header
	(*Body)(nil),                    // 4: http.proto.Body
	(*HttpRequest)(nil),             // 5: http.proto.HttpRequest
	(*HttpResponse)(nil),            // 6: http.proto.HttpResponse
	(*Envelope)(nil),                // 7: http.proto.Envelope
}
var file_http_proto_depIdxs = []int32{
	0, // 0: http.proto.HttpRequest.method:type_name -> http.proto.HttpMethod
	3, // 1: http.proto.HttpRequest.headers:type_name -> http.proto.Header
	4, // 2: http.proto.HttpRequest.body:type_name -> http.proto.Body
	1, // 3: http.proto.HttpResponse.status:type_name -> http.proto.HttpStatus
	3, // 4: http.proto.HttpResponse.headers:type_name -> http.proto.Header
	4, // 5: http.proto.HttpResponse.body:type_name -> http.proto.Body
	2, // 6: http.proto.Envelope.encoding:type_name -> http.proto.Envelope.HttpProtoEncoding
	5, // 7: http.proto.Envelope.request:type_name -> http.proto.HttpRequest
	6, // 8: http.proto.Envelope.response:type_name -> http.proto.HttpResponse
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_http_proto_init() }
func file_http_proto_init() {
	if File_http_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_http_proto_rawDesc), len(file_http_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_http_proto_goTypes,
		DependencyIndexes: file_http_proto_depIdxs,
		EnumInfos:         file_http_proto_enumTypes,
		MessageInfos:      file_http_proto_msgTypes,
	}.Build()
	File_http_proto = out.File
	file_http_proto_goTypes = nil
	file_http_proto_depIdxs = nil
}
